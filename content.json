{"meta":{"title":"Jetinzhang Blog","subtitle":null,"description":null,"author":"Jetinzhang","url":"https://jetinzhang.github.io","root":"/"},"pages":[{"title":"关于","date":"2019-10-25T06:01:03.000Z","updated":"2019-10-29T14:18:28.623Z","comments":true,"path":"about/index.html","permalink":"https://jetinzhang.github.io/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2019-10-25T05:46:02.000Z","updated":"2019-10-25T05:58:25.240Z","comments":false,"path":"categories/index.html","permalink":"https://jetinzhang.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-10-25T05:45:52.000Z","updated":"2019-10-25T05:58:30.376Z","comments":false,"path":"tags/index.html","permalink":"https://jetinzhang.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Linux 分区MBR调整为GPT，并扩大容量","slug":"Linux 分区MBR调整为GPT并扩大容量","date":"2019-10-25T11:01:03.000Z","updated":"2019-10-29T14:19:03.146Z","comments":true,"path":"2019/10/25/Linux 分区MBR调整为GPT并扩大容量/","link":"","permalink":"https://jetinzhang.github.io/2019/10/25/Linux%20%E5%88%86%E5%8C%BAMBR%E8%B0%83%E6%95%B4%E4%B8%BAGPT%E5%B9%B6%E6%89%A9%E5%A4%A7%E5%AE%B9%E9%87%8F/","excerpt":"","text":"Linux 分区MBR调整为GPT，并扩大容量==注意: 涉及到重要数据，请先备份！！！！！！== 1. 说明具备知识：fdisk gdisk基础使用方法 使用工具：gdisk ==注意: 不要使用fdisk调整GPT分区，也不要使用gdisk去调整MBR分区，但转换除外。== 之前看有些文章使用parted来调整分区也是可以的，但不建议，因为parted执行完命令是立即生效的，建议还是使用gdisk 类似fdisk操作，不保存不生效。 2. 安装工具12345# Debianapt-get install gdisk# Centosyum install gdisk 3. 卸载硬盘挂载的目录1umount /data 4. 判断硬盘类型使用如下命令： 1234567891011121314151617181920root@minio-c1-node2:~# fdisk -l /dev/sdbDisk /dev/sdb: 5 TiB, 5497558138880 bytes, 10737418240 sectorsDisk model: Virtual disk Units: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisklabel type: gptDisk identifier: BEAA23E5-F7C0-4CB4-9A45-5666024DDAE3Device Start End Sectors Size Type/dev/sdb1 2048 10737418206 10737416159 5T Linux filesystem-----------------# GPT类型Disklabel type: gpt # MBR类型Disklabel type: dos 5. MBR转换为GPT并扩容如果只是想转换为gpt的话 gdisk /dev/sdb 然后在gdisk命令行输入w 保存一下就实现了mbr转换为gpt了。 如果还要继续扩大容量使用gdisk删除原来分区，重新建分区也能进行转换并扩大容量。 ==注意：原来Start (sector) 是多少，First sector就填多少，这样才能保证文件不丢失== 5.1. 转换为gpt12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061root@minio-c1-node4:~# gdisk /dev/sdbGPT fdisk (gdisk) version 1.0.3Partition table scan: MBR: protective BSD: not present APM: not present GPT: presentFound valid GPT with protective MBR; using GPT.Command (? for help): pDisk /dev/sdb: 10737418240 sectors, 5.0 TiBModel: Virtual disk Sector size (logical/physical): 512/512 bytesDisk identifier (GUID): 6BC2B78A-FD8D-4103-803C-2628F7C4C765Partition table holds up to 128 entriesMain partition table begins at sector 2 and ends at sector 33First usable sector is 34, last usable sector is 10737418206Partitions will be aligned on 2048-sector boundariesTotal free space is 8589936573 sectors (4.0 TiB)Number Start (sector) End (sector) Size Code Name 1 2048 2147483647 1024.0 GiB 8300 Linux filesystemCommand (? for help): dUsing 1Command (? for help): nPartition number (1-128, default 1): First sector (34-10737418206, default = 2048) or &#123;+-&#125;size&#123;KMGTP&#125;: Last sector (2048-10737418206, default = 10737418206) or &#123;+-&#125;size&#123;KMGTP&#125;: Current type is 'Linux filesystem'Hex code or GUID (L to show codes, Enter = 8300): Changed type of partition to 'Linux filesystem'Command (? for help): pDisk /dev/sdb: 10737418240 sectors, 5.0 TiBModel: Virtual disk Sector size (logical/physical): 512/512 bytesDisk identifier (GUID): 6BC2B78A-FD8D-4103-803C-2628F7C4C765Partition table holds up to 128 entriesMain partition table begins at sector 2 and ends at sector 33First usable sector is 34, last usable sector is 10737418206Partitions will be aligned on 2048-sector boundariesTotal free space is 2014 sectors (1007.0 KiB)Number Start (sector) End (sector) Size Code Name 1 2048 10737418206 5.0 TiB 8300 Linux filesystemCommand (? for help): wFinal checks complete. About to write GPT data. THIS WILL OVERWRITE EXISTINGPARTITIONS!!Do you want to proceed? (Y/N): YOK; writing new GUID partition table (GPT) to /dev/sdb.Warning: The kernel is still using the old partition table.The new table will be used at the next reboot or after yourun partprobe(8) or kpartx(8)The operation has completed successfully. 5.2. 调整分区大小123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657root@minio-c1-node3:~# gdisk /dev/sdbGPT fdisk (gdisk) version 1.0.3Partition table scan: MBR: MBR only BSD: not present APM: not present GPT: not present***************************************************************Found invalid GPT and valid MBR; converting MBR to GPT formatin memory. THIS OPERATION IS POTENTIALLY DESTRUCTIVE! Exit bytyping 'q' if you don't want to convert your MBR partitionsto GPT format!***************************************************************Command (? for help): pDisk /dev/sdb: 10737418240 sectors, 5.0 TiBModel: Virtual disk Sector size (logical/physical): 512/512 bytesDisk identifier (GUID): 17A7407E-8FD7-474F-84F4-5278551BBAE7Partition table holds up to 128 entriesMain partition table begins at sector 2 and ends at sector 33First usable sector is 34, last usable sector is 10737418206Partitions will be aligned on 2048-sector boundariesTotal free space is 8589936573 sectors (4.0 TiB)Number Start (sector) End (sector) Size Code Name 1 2048 2147483647 1024.0 GiB 8300 Linux filesystemCommand (? for help): dUsing 1Command (? for help): nPartition number (1-128, default 1): First sector (34-10737418206, default = 2048) or &#123;+-&#125;size&#123;KMGTP&#125;: Last sector (2048-10737418206, default = 10737418206) or &#123;+-&#125;size&#123;KMGTP&#125;: Current type is 'Linux filesystem'Hex code or GUID (L to show codes, Enter = 8300): Changed type of partition to 'Linux filesystem'Command (? for help): pDisk /dev/sdb: 10737418240 sectors, 5.0 TiBModel: Virtual disk Sector size (logical/physical): 512/512 bytesDisk identifier (GUID): CC9ED012-8B6C-4682-B9FF-65A4CD1E92A0Partition table holds up to 128 entriesMain partition table begins at sector 2 and ends at sector 33First usable sector is 34, last usable sector is 10737418206Partitions will be aligned on 2048-sector boundariesTotal free space is 2014 sectors (1007.0 KiB)Number Start (sector) End (sector) Size Code Name 1 2048 10737418206 5.0 TiB 8300 Linux filesystem 6. 通知系统硬盘大小已调整只有进行下面这一步骤，df -hT时才会显示正常的硬盘空间大小 1234567891011121314151617181920# 首先查看是否调整完分区后自动挂载分区了,如果挂载了要再卸载一次。(我这边是会出现自动挂载现象，如果没有卸载会出现问题1的错误。)root@minio-c1-node4:~# df -hTFilesystem Type Size Used Avail Use% Mounted onudev devtmpfs 3.9G 0 3.9G 0% /devtmpfs tmpfs 798M 8.6M 790M 2% /run/dev/sda2 ext4 58G 2.3G 53G 5% /tmpfs tmpfs 3.9G 0 3.9G 0% /dev/shmtmpfs tmpfs 5.0M 0 5.0M 0% /run/locktmpfs tmpfs 3.9G 0 3.9G 0% /sys/fs/cgroup/dev/sda1 ext4 1000M 47M 885M 5% /boottmpfs tmpfs 798M 0 798M 0% /run/user/0/dev/sdb1 ext4 1007G 158M 956G 1% /data# ext分区格使用命令进行调整resize2fs /dev/sdb1# xfs分区格式使用命令进行调整xfs_growfs /dev/sdb1 7. 遇到问题问题1: The filesystem is already 268435200 (4k) blocks long. Nothing to do! 将挂载的分区再次卸载，然后再执行resize2fs或者xfs_growfs命令。 12345678910111213141516root@minio-c1-node4:~# resize2fs /dev/sdb1 resize2fs 1.44.5 (15-Dec-2018)The filesystem is already 268435200 (4k) blocks long. Nothing to do!root@minio-c1-node4:~# df -hTFilesystem Type Size Used Avail Use% Mounted onudev devtmpfs 3.9G 0 3.9G 0% /devtmpfs tmpfs 798M 8.6M 790M 2% /run/dev/sda2 ext4 58G 2.3G 53G 5% /tmpfs tmpfs 3.9G 0 3.9G 0% /dev/shmtmpfs tmpfs 5.0M 0 5.0M 0% /run/locktmpfs tmpfs 3.9G 0 3.9G 0% /sys/fs/cgroup/dev/sda1 ext4 1000M 47M 885M 5% /boottmpfs tmpfs 798M 0 798M 0% /run/user/0/dev/sdb1 ext4 1007G 158M 956G 1% /data","categories":[{"name":"Linux","slug":"Linux","permalink":"https://jetinzhang.github.io/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://jetinzhang.github.io/tags/Linux/"},{"name":"gdisk","slug":"gdisk","permalink":"https://jetinzhang.github.io/tags/gdisk/"},{"name":"分区","slug":"分区","permalink":"https://jetinzhang.github.io/tags/%E5%88%86%E5%8C%BA/"},{"name":"扩容","slug":"扩容","permalink":"https://jetinzhang.github.io/tags/%E6%89%A9%E5%AE%B9/"}]}]}